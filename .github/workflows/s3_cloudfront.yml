name: Deploy Next.js SSR to AWS (Serverless v3)

on:
  push:
    branches: [develop]
  workflow_dispatch:
    inputs:
      branch:
        description: "develop"
        required: true
        default: "develop"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. 소스 체크아웃
      - name: Checkout source
        uses: actions/checkout@v3

      # 2. 환경변수 생성
      - name: Create .env.production
        run: echo "${{ secrets.ENV_PRODUCTION }}" > .env.production

      # 3. 의존성 설치
      - name: Install dependencies
        run: npm ci

      # 4. Next.js 빌드
      - name: Build Next.js
        run: npm run build

      # 5. S3 정적 파일 업로드
      - name: Upload static files to S3
        run: |
          aws s3 sync out/ s3://fitspot-frontend-bucket --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-northeast-2

      # 6. Lambda 코드 패키징
      - name: Package Lambda
        run: |
          mkdir -p lambda_package
          cp -r .next node_modules package.json lambda_package/
          cd lambda_package && zip -r ../lambda.zip .

      # 7. Lambda 업데이트
      - name: Deploy to Lambda
        run: |
          aws lambda update-function-code \
            --function-name next-ssr-lambda \
            --zip-file fileb://lambda.zip \
            --region ap-northeast-2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-northeast-2

      # 8. CloudFront 캐시 무효화
      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DIST_ID }} \
            --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-northeast-2
